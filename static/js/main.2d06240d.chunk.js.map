{"version":3,"sources":["components/menu.js","components/navbar.js","components/header.js","components/footer.js","serviceWorker.js","index.js"],"names":["phoneHome","x","a","link","res","axios","get","then","response","data","menu_items","catch","error","console","log","makeDrinks","drinks","name","description","i","length","j","Math","floor","random","temp","slice","priceGenerator","min","max","ceil","generateDish","text","price","id","className","key","Appetize","props","state","localMenu","prevMenu","JSON","parse","window","localStorage","getItem","newMenu","forEach","indexOf","currentMenu","setItem","stringify","this","setState","map","React","Component","Desert","Dinner","Lunch","Breakfast","Cocktails","Menu","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","Header","src","alt","Footer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2d06240d.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\n// call to API TODO: Make this trigger an error popup if the call fails\nasync function phoneHome(x) {\n    var link = \"https://entree-f18.herokuapp.com/v1/menu/\" + x;\n    var res = \"\";\n    await axios.get(link)\n        .then(function (response) {\n            res = response.data.menu_items;\n            return (res)\n        })\n        .catch(function (error) {\n            console.log(error)\n        })\n    // .finally(res=>{return (res)})\n    return res;\n}\n\n// list of cocktails from a random cocktail generator\nfunction makeDrinks(x) {\n    var drinks = [\n        {\n            name: \"Gualala River\",\n            description: \"Gin, pruno, and falernum with a dash of peach bitters and muddled cranberry\"\n        },\n        {\n            name: \"Clusivity\",\n            description: \"Gin, benedictine, meyer lemon juice, and muddled strawberry\"\n        },\n        {\n            name: \"European Film Award for Best Actress\",\n            description: \"Gin, red grapefruit juice, simple syrup, grapefruit bitters, and grated cinnamon\"\n        },\n        {\n            name: \"Thomas Cawton\",\n            description: \"Gin, rupy port, meyer lemon and key lime juices, cointreau, brown sugar, and a dash of grapefruit bitters\"\n        },\n        {\n            name: \"Dir\",\n            description: \"Gin, simple syrup, meyer lemon and key lime juices, strega, grated nutmeg, and muddled blackberry\"\n        },\n        {\n            name: \"Bristlecone Pine\",\n            description: \"Gin, ruby port, apple cider, key lime juice, peychaud bitters, mint leaves, and sweet champagne\"\n        },\n        {\n            name: \"Thomas Carskadon\",\n            description: \"Gin, bourbon, watermelon syrup, and a dash of peach bitters\"\n        },\n        {\n            name: \"Suristan\",\n            description: \"Gin, white vermouth, with orange, grapefruit, and whiskey bitters\"\n        },\n        {\n            name: \"Mottle-backed Elaenia\",\n            description: \"Gin, rye, falernum, and a dash of maraschino liqeur\"\n        },\n        {\n            name: \"Ankerite\",\n            description: \"Gin, ruby port, lemon juice, benedictine, tarragon, and a dash of grapefruit bitters\"\n        }\n    ]\n\n    // shuffles drink list\n    for (let i = drinks.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i);\n        const temp = drinks[i];\n        drinks[i] = drinks[j];\n        drinks[j] = temp;\n    }\n    return drinks.slice(0, x)\n\n}\n\n// generates random prices with repeats\nfunction priceGenerator(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\n// generates cards with details for dishes\nfunction generateDish(x) {\n    if (x.name != null) {\n        var name = x.name;\n    }\n    var text = x.description;\n    var price = x.price;\n    var id = x.id;\n    return (\n        <div className=\"col-md-3\" key={id} id={id}>\n            <div className=\"card h-100\">\n                <div className=\"card-body\">\n                    <h5>{name}</h5>\n                    <p className=\"card-text\">{text}</p>\n                    <p className=\"card-text text-right\">${price}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n// renders all menu sections together\nfunction Menu() {\n    return (\n        <div className=\"bg-light\" id=\"Menu\">\n            <Breakfast />\n            <Appetize />\n            <Lunch />\n            <Dinner />\n            <Cocktails />\n            <Desert />\n        </div>\n    )\n\n}\n\n\n// generates the list of appetizers\nclass Appetize extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { localMenu: [] }\n    }\n\n    // checks for local data, assigns menu items an ID and a price, sets state\n    async componentDidMount() {\n        var prevMenu = JSON.parse(window.localStorage.getItem(\"appetizers\"));\n        if (prevMenu === null) {\n            var newMenu = (await phoneHome(8));\n            newMenu.forEach((x) => {\n                x.id = \"app\" + newMenu.indexOf(x);\n                x.price = priceGenerator(5, 10)\n            });\n            var currentMenu = newMenu;\n        }\n        else {\n            currentMenu = prevMenu\n        }\n        if (prevMenu === null) {\n            await localStorage.setItem(\"appetizers\", JSON.stringify(currentMenu))\n        }\n        await this.setState({\n            localMenu: currentMenu\n        })\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div className=\"container mb-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                            <h3 className=\"navbar-text mx-auto text-light mb-0\">Appetizers</h3>\n                        </nav>\n                        <div className=\"border border-primary mt-0\">\n                            <div className=\"container mt-4\">\n                                <div className=\"row mb-4\">\n                                    {this.state.localMenu.map(x => (generateDish(x)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n// generates the list of deserts\nclass Desert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { localMenu: [] }\n    }\n\n    // checks for local data, assigns menu items an ID and a price, sets state\n    async componentDidMount() {\n        var prevMenu = JSON.parse(window.localStorage.getItem(\"desert\"));\n        if (prevMenu === null) {\n            var newMenu = (await phoneHome(7));\n            newMenu.forEach((x) => {\n                x.id = \"app\" + newMenu.indexOf(x);\n                x.price = priceGenerator(4, 9)\n            });\n            var currentMenu = newMenu;\n        }\n        else {\n            currentMenu = prevMenu\n        }\n        if (prevMenu === null) {\n            await localStorage.setItem(\"desert\", JSON.stringify(currentMenu))\n        }\n        await this.setState({\n            localMenu: currentMenu\n        })\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                            <h3 className=\"navbar-text mx-auto text-light mb-0\">Deserts</h3>\n                        </nav>\n                        <div className=\"border border-primary mt-0 mb-4\">\n                            <div className=\"container mt-4\">\n                                <div className=\"row mb-4\">\n                                    {this.state.localMenu.map(x => (generateDish(x)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n// generates the list of dinner items\nclass Dinner extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { localMenu: [] }\n    }\n\n    // checks for local data, assigns menu items an ID and a price, sets state\n    async componentDidMount() {\n        var prevMenu = JSON.parse(window.localStorage.getItem(\"dinner\"));\n        if (prevMenu === null) {\n            var newMenu = (await phoneHome(15));\n            newMenu.forEach((x) => {\n                x.id = \"app\" + newMenu.indexOf(x);\n                x.price = priceGenerator(9, 20)\n            });\n            var currentMenu = newMenu;\n        }\n        else {\n            currentMenu = prevMenu\n        }\n        if (prevMenu === null) {\n            await localStorage.setItem(\"dinner\", JSON.stringify(currentMenu))\n        }\n        await this.setState({\n            localMenu: currentMenu\n        })\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div className=\"container mb-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                            <h3 className=\"navbar-text mx-auto text-light mb-0\">Dinner</h3>\n                        </nav>\n                        <div className=\"border border-primary mt-0\">\n                            <div className=\"container mt-4\">\n                                <div className=\"row mb-4\">\n                                    {this.state.localMenu.map(x => (generateDish(x)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n// generates the list of lunch items\nclass Lunch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { localMenu: [] }\n    }\n\n    // checks for local data, assigns menu items an ID and a price, sets state\n    async componentDidMount() {\n        var prevMenu = JSON.parse(window.localStorage.getItem(\"lunch\"));\n        if (prevMenu === null) {\n            var newMenu = (await phoneHome(10));\n            newMenu.forEach((x) => {\n                x.id = \"app\" + newMenu.indexOf(x);\n                x.price = priceGenerator(8, 15)\n            });\n            var currentMenu = newMenu;\n        }\n        else {\n            currentMenu = prevMenu\n        }\n        if (prevMenu === null) {\n            await localStorage.setItem(\"lunch\", JSON.stringify(currentMenu))\n        }\n        await this.setState({\n            localMenu: currentMenu\n        })\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div className=\"container mb-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                            <h3 className=\"navbar-text mx-auto text-light mb-0\">Lunch</h3>\n                        </nav>\n                        <div className=\"border border-primary mt-0\">\n                            <div className=\"container mt-4\">\n                                <div className=\"row mb-4\">\n                                    {this.state.localMenu.map(x => (generateDish(x)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n// generates the list of breakfast items\nclass Breakfast extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { localMenu: [] }\n    }\n\n    // checks for local data, assigns menu items an ID and a price, sets state\n    async componentDidMount() {\n        var prevMenu = JSON.parse(window.localStorage.getItem(\"breakfast\"));\n        if (prevMenu === null) {\n            var newMenu = (await phoneHome(10));\n            newMenu.forEach((x) => {\n                x.id = \"app\" + newMenu.indexOf(x);\n                x.price = priceGenerator(8, 14)\n            });\n            var currentMenu = newMenu;\n        }\n        else {\n            currentMenu = prevMenu\n        }\n        if (prevMenu === null) {\n            await localStorage.setItem(\"breakfast\", JSON.stringify(currentMenu))\n        }\n        await this.setState({\n            localMenu: currentMenu\n        })\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div className=\"container mb-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                            <h3 className=\"navbar-text mx-auto text-light mb-0\">Breakfast</h3>\n                        </nav>\n                        <div className=\"border border-primary mt-0\">\n                            <div className=\"container mt-4\">\n                                <div className=\"row mb-4\">\n                                    {this.state.localMenu.map(x => (generateDish(x)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nclass Cocktails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { localMenu: [] }\n    }\n\n    // checks for local data, assigns menu items an ID and a price, sets state\n    async componentDidMount() {\n        var prevMenu = JSON.parse(window.localStorage.getItem(\"cocktails\"));\n        if (prevMenu === null) {\n            var newMenu = (await makeDrinks(4));\n            newMenu.forEach((x) => {\n                x.id = \"app\" + newMenu.indexOf(x);\n                x.price = priceGenerator(4, 10)\n            });\n            var currentMenu = newMenu;\n        }\n        else {\n            currentMenu = prevMenu\n        }\n        if (prevMenu === null) {\n            await localStorage.setItem(\"cocktails\", JSON.stringify(currentMenu))\n        }\n        await this.setState({\n            localMenu: currentMenu\n        })\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div className=\"container mb-5\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                            <h3 className=\"navbar-text mx-auto text-light mb-0\">Cocktails</h3>\n                        </nav>\n                        <div className=\"border border-primary mt-0\">\n                            <div className=\"container mt-4\">\n                                <div className=\"row mb-4\">\n                                    {this.state.localMenu.map(x => (generateDish(x)))}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nexport default Menu","import React from 'react';\n\n\nfunction Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-md fixed-top navbar-dark bg-dark text-light\" id=\"topnav\">\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n          data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav mx-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#Menu\">Menu <span className=\"sr-only\">(current)</span></a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#Hours\">Hours & Location</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"Contact\">Contact Us</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  )\n\n}\n\nexport default Navbar","import React from 'react';\n\n\nfunction Header() {\n\n    return (\n        <div>\n            <div className=\"jumbotron jumbotron-fluid mt-3\" id=\"headjumbo\">\n                <div className=\"container\">\n                    <img src=\"./images/Toast & Clink.png\" alt=\"logo reading Juniper Road: Rustic Fine Dining over two crossed arrows\" />\n                    <h3 className=\"display-3 text-light\">Rustic & Refined</h3>\n                    <p className=\"text-light\">Mountainside lodge luxury comes to downtown Lexington. Whether by the fireside or the streetside, enjoy fine dining in a rustic atmosphere.</p>\n                    <h3 className=\"display-3 text-light\">Culinary Bliss</h3>\n                    <p className=\"text-light\">Only the finest ingredients from local, organic sources. Fresh, flavorful, and fantastic.</p>\n                    <h3 className=\"display-3 text-light\">Handcrafted Cocktails</h3>\n                    <p className=\"text-light\">Featuring the best botanicals distilled from our namesake, sample incredible creations unique to our bar.</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Header","import React from 'react';\n\n\nfunction Footer() {\n\n    return (\n        <div>\n            <div className=\"card bg-dark text-light\" id=\"Hours\">\n                <div className=\"card-body\">\n                    <h3 className=\"card-title\">Hours</h3>\n                    <p className=\"card-text\">Tuesday-Thursday 8:00 AM to 9:00 PM</p>\n                    <p className=\"card-text\">Friday-Sunday 7:00 AM to 10:00 PM</p>\n                    <p className=\"card-text\">Closed Monday</p>\n                </div>\n            </div>\n\n            <div className=\"jumbotron mb-0\" id=\"Contact\">\n                <div className=\"container\">\n                    <h1 className=\"display-3 text-light\">We are always here to help</h1>\n                    <p className=\"text-light\">Phone: (859) 555-555</p>\n                    <p className=\"text-light\">348 E Main St</p>\n                    <p className=\"text-light\">Lexington, KY</p>\n                    <a href=\"#Menu\" className=\"text-light\">Contact Us Online</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Footer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./components/jumbotron.css\";\nimport Menu from \"./components/menu\";\nimport Navbar from \"./components/navbar\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport \"./components/bootstraptheme.css\"\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <div className=\"bg-light\">\n    <Navbar />\n    <Header />\n    <Menu />\n    <Footer />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}